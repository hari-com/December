# 1nd script 
#! /usr/bin/sh
## Arguments (# will ignore the line)
x=$1
y=$2
echo “value of X is: $x”
echo “value of Y is: $y”
## Addition
sum=$(($a+$b))
echo “adding $a and $b will be: $sum”

# To execute this  $ vi script.sh 10 20 
(this will hard code the value for x and y) or assign the value by not hardcoding, i.e. just running the script



# 2nd script
## Strings
#! /usr/bin/sh
Fname=$1
Lname=$2

echo “Your first name is: $fname”
echo “Your last name is: $lname”



# 3rd script
## Conditions
#! /usr/bin/sh
a=3
b=5
if [[$a -ls $b ]] ; then          # ls => Less than | gt => greater than 
    echo “A is smaller than B”
elif [[$a –gt $b ]] ; then  # we can use as many conditions we want if the condition does not match, it will go to the else condition
    echo “A is greater than B”
else
    echo “A and B are equal”
fi                                                     # if condition closed with fi

# Note: -ls and -gt used when using with variables, for numbers we can use <= and >= operator


# 4th script
## String
#! /usr/bin/sh
Str1= John
Str2=Adam
If [[ “$str1” == “$str2””; then          #For Strings, we need to use double coat “ ”
    echo “Both strings are equal”


# 5th script
## for loop                                                                   # for loop will continuously run until the condition is accepted
#! /usr/bin/sh
i=0
for (i=0; I<=12; i++)
for i in 1 2 3 4 12 16             # value of i is incrementing (it can be any random numbers)
do
if [[ $i –gt 9 ]]; then
  echo “Value of i is: $i”
fi    # if ends with fi
done  # all loop ends with done




# 6th script
## while loop                                                                # while loop will continuously run until the condition is matched
#! /usr/bin/sh

input=Hello
while [ “input” != “bye” ]
do
echo “Please type something (bye will quite)”
read –p ‘enter your input’ input   #Read  => prompt the user to enter the value in the script
echo “you have entered: $input”
done   # all loop ends with done



# 7th script
# Reading a file with while loop (inside the script)
#! /usr/bin/sh

line=1 
cat ./<filename> | while IFS= read –r var   #var is used for storing a value while running script
do
  echo “I am printing line $line:” var
  line=$((line+1))
done



# 8th script
# Using UPPER or LOWER case with while loop (tr is used for changing the case)
#! /usr/bin/sh

read -p “enter your string: “ input                #storing user entered value to variable called input
input1=’echo $input | tr ‘[:upper:]’ ‘[:lower:]’’  # converting user entered value to upper case and storing to variable called input1
echo “your input is converted to: $input1”

