# 1nd script 
#! /usr/bin/sh
## Arguments (# will ignore the line)
x=$1
y=$2
echo “value of X is: $x”
echo “value of Y is: $y”
## Addition
sum=$(($a+$b))
echo “adding $a and $b will be: $sum”

# To execute this  $ vi script.sh 10 20 
(this will hard code the value for x and y) or assign the value by not hardcoding, i.e. just running the script



# 2nd script
## Strings
#! /usr/bin/sh
Fname=$1
Lname=$2

echo “Your first name is: $fname”
echo “Your last name is: $lname”



# 3rd script
## Conditions
#! /usr/bin/sh
a=3
b=5
if [[$a -ls $b ]] ; then          # ls => Less than | gt => greater than 
    echo “A is smaller than B”
elif [[$a –gt $b ]] ; then  # we can use as many conditions we want if the condition does not match, it will go to the else condition
    echo “A is greater than B”
else
    echo “A and B are equal”
fi                                                     # if condition closed with fi

# Note: -ls and -gt used when using with variables, for numbers we can use <= and >= operator


# 4th script
## String
#! /usr/bin/sh
Str1= John
Str2=Adam
If [[ “$str1” == “$str2””; then          #For Strings, we need to use double coat “ ”
    echo “Both strings are equal”


# 5th script
## for loop                                                                   # for loop will continuously run until the condition is accepted
#! /usr/bin/sh
i=0
for (i=0; I<=12; i++)
for i in 1 2 3 4 12 16             # value of i is incrementing (it can be any random numbers)
do
if [[ $i –gt 9 ]]; then
  echo “Value of i is: $i”
fi    # if ends with fi
done  # all loop ends with done




# 6th script
## while loop                                                                # while loop will continuously run until the condition is matched
#! /usr/bin/sh

input=Hello
while [ “input” != “bye” ]
do
echo “Please type something (bye will quite)”
read –p ‘enter your input’ input   #Read  => prompt the user to enter the value in the script
echo “you have entered: $input”
done   # all loop ends with done



# 7th script
# Reading a file with while loop (inside the script)
#! /usr/bin/sh

line=1 
cat ./<filename> | while IFS= read –r var   #var is used for storing a value while running script
do
  echo “I am printing line $line:” var
  line=$((line+1))
done



# 8th script
# Using UPPER or LOWER case with while loop (tr is used for changing the case)
#! /usr/bin/sh

read -p “enter your string: “ input                #storing user entered value to variable called input
input1=’echo $input | tr ‘[:upper:]’ ‘[:lower:]’’  # converting user entered value to upper case and storing to variable called input1
echo “your input is converted to: $input1”



Sample Start/Stop Scripts
==========================
#!/bin/bash

# Follow the steps below to configure Quickstart as a continuous integration appliance, complete with Jenkins,
# Selenium Builder, Selenium Server, PHPUnit, and Selenium Zoetrope. The script also configures and runs an
# example Jenkins test job for Quickstart's example6.dev site, including Simpletest module testing and
# Coder module checks.
# 
# 1. Download Quickstart and follow the installation instructions:
#       http://drupal.org/project/quickstart
# 2. Open a Terminal window (Applications > Accessories > Terminal) and run the following command:
#     $ wget -q -O - https://raw.github.com/gist/1306186/install-citools.sh | bash
# 3. As the script runs, read and follow the directions that appear in the pop-up boxes.
# 4. When the script completes, Jenkins should open in Firefox. If not, enter the following URL in Firefox:
#       http://localhost:8081
# 5. Add a variable (Manage Jenkins > Configure System > check Environment variables > click Add)
#       name: DISPLAY
#       value: :0.0

jenkins_check() {
  rc=1
  while [ $rc -ne 0 ]; do
     sleep 5
     wget --spider http://localhost:8081 > /dev/null 2>&1
     rc=$?
  done
}

echo "###############################################"
echo "Removing mis-configured local proxy"
echo "###############################################"
# For more info: http://drupal.org/node/1194150
sudo sed -i '/http_proxy.*/d' /etc/environment
unset http_proxy

echo "###############################################"
echo "Updating Firefox"
echo "###############################################"
sudo add-apt-repository ppa:mozillateam/firefox-stable 
sudo apt-get update
echo "y" | sudo apt-get install firefox

echo "###############################################"
echo "Installing Selenium Builder"
echo "###############################################"
wget -O /tmp/se-builder.xpi https://addons.mozilla.org/firefox/downloads/latest/285515/addon-285515-latest.xpi
firefox /tmp/se-builder.xpi &
sleep 12
zenity --info --text="Firefox will start.\n\n1) Please accept the installation of the Selenium Builder extension.\n2) Then restart Firefox." &

echo "###############################################"
echo "Installing Simpletest & tools to example6.dev"
echo "###############################################"
cd /home/quickstart/websites/example6.dev/
drush dl -l http://example6.dev/ simpletest
# Apply patch file required to run tests in Drupal 6
patch -p0 < sites/all/modules/simpletest/D6-core-simpletest.patch
drush -y -l http://example6.dev/ en simpletest
# Use pre-patched run-tests.sh script bundled with Pressflow
cd /home/quickstart/websites/example6.dev/scripts/
wget https://raw.github.com/pressflow/6/master/scripts/run-tests.sh

echo "###############################################"
echo "Installing Coder module on example6.dev"
echo "###############################################"
cd /home/quickstart/websites/example6.dev/
# Use -dev version because of checkstyle additions
# For more info: http://drupal.org/node/858330#comment-4876440
drush dl -l http://example6.dev/ coder-6.x-2.x-dev
drush -y -l http://example6.dev/ en coder

echo "###############################################"
echo "Installing Selenium Server"
echo "###############################################"
mkdir /home/quickstart/selenium-server-2.15.0/
wget -O /home/quickstart/selenium-server-2.15.0/selenium-server.jar http://selenium.googlecode.com/files/selenium-server-standalone-2.15.0.jar

echo "###############################################"
echo "Installing Selenium Zoetrope dependencies"
echo "###############################################"
echo "y" | sudo apt-get install xvfb
echo "y" | sudo apt-get install ffmpeg
sudo pear upgrade PEAR
sudo pear channel-update pear.php.net
sudo pear config-set auto_discover 1
sudo pear install pear.phpunit.de/PHPUnit
sudo pear install phpunit/PHPUnit_Selenium

echo "###############################################"
echo "Installing Selenium Zoetrope"
echo "###############################################"
# For more info: https://launchpad.net/selenium-zoetrope
cd /home/quickstart/
bzr branch lp:selenium-zoetrope

echo "###############################################"
echo "Running separate Jenkins installation script"
echo "###############################################"
# For more info: http://drupal.org/node/1301862
cd /home/quickstart/
git clone git://gist.github.com/1477667.git
cp 1477667/install-jenkins.sh /home/quickstart/quickstart/contrib/
chmod 755 /home/quickstart/quickstart/contrib/install-jenkins.sh
rm -rf 1477667/
echo "y" | . /home/quickstart/quickstart/contrib/install-jenkins.sh

echo "###############################################"
echo "Installing Jenkins plugins"
echo "###############################################"
# Give Jenkins time to start up
jenkins_check
# Manually run Updatecenter
# For more info: https://gist.github.com/1026918
wget -O default.js http://updates.jenkins-ci.org/update-center.json
sed '1d;$d' default.js > default.json
curl -X POST -H "Accept: application/json" -d @default.json http://localhost:8081/updateCenter/byId/default/postBack --verbose
java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8081 install-plugin xunit
java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8081 install-plugin git
java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8081 install-plugin checkstyle

echo "###############################################"
echo "Adding Jenkins job"
echo "###############################################"
cd /home/quickstart/jenkins/jobs/
git clone git://git.assembla.com/ex6devtest.git
# Restart so jobs get loaded
java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8081 safe-restart
# Give Jenkins time to restart
jenkins_check
wget http://localhost:8081/job/ex6devtest/buildWithParameters -o /dev/null
while [ ! -e /home/quickstart/jenkins/jobs/ex6devtest/workspace/test-results ]
  do
  printf "."
  sleep 1
done
cd /home/quickstart/jenkins/jobs/ex6devtest/
# Jenkins wipes out the job's workspace directory when first run, so we need to recover the necessary subdirectories
git checkout -- workspace/selenium/.

echo "###############################################"
echo "Loading Jenkins interface in Firefox"
echo "###############################################"
firefox http://localhost:8081 &
